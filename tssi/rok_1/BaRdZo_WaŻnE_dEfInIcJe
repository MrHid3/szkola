parser - program sprawdzający poprawność składni programu
validator - parser dla html'a
strona internetowa - plik html
witryna internetowa - połączenie stron internetowych
portal internetowy - witryna internetowa na wiele tematów
wortal - witryna internetowa na jeden temat
przeglądarka - aplikacja do przeglądanie i pobieranie treści internetowych oraz wysyłanie żądań do serwera DNS

HTML DZIELI STRONE NA BLOKI
CSS FORMATUJE

ZASADY HTML bardzo ważne i jeżeli ich nie znasz potkniesz sie na krawężniku i rozbijesz głowe na lokalnym satelicie:
- nigdy nie krzyżuj znaczników
- zawsze zamykaj znaczniki (czego nie musisz robić ale pani tego chce btw)
- wpisując znaczniki i argumenty zawsze używaj małych liter (to akurat ważne)
- używaj cudzysłowów dla wszystkich atrybutów
- uważaj ze znakami specjalnymi (ENCJE)

enjce - ciąg znaków mówiących html-owi 'ej mordo bo jak włoże znak specjalny to wybuchniesz wiec włoże tu &lt; i ty masz wiedzieć że to <'
mamy znać:
	&lt; - <
	&gt; - >

html - hipertekstowy język znaczników, język służący do tworzenia dokumentów hipertekstowych oraz opisywania struktury informacji zawartych wewnątrz strony

znacznik html - część składni języka HTML zawierające informacje o strukturze i wyglądzie strony internetowej. Umieszczone w tagach dane wykorzystywane są również przez roboty pobierające zawartość witryny, w celu lepszego dopasowania wyników wyszukiwania do intencji użytkownika. Zamknięte w ostrych nawiasach (<>), nie możemy ich krzyżować, mogą być pojedyncze, kontenerowe blokowe lub kontenerowe liniowem. Mogą one mieć atrybuty. Zawsze zapisujemy znaczniki i atrybuty małymi literami [DOCTYPE NIE JEST ZNACZNIKIEM] 

w arkuszach stylu znajdują się reguły

składnia reguł:

selektor {
	właściwość: wartość;
	właściwość: wartość1 wartość2;
	itp. itd.
}

selektor - który elemnt na stronie wybieramy (np p, h1, h2, i, cite)
właściwość - w jaki sposób go modyfikujemy (np. color, border)
wartość - wartość właściwości (np. 2px, black)

deklaracja stylu - reguła bez selektora

przykład reguły:

p {
color: blue;
}

przykład deklaracji:

{
color: blue;
}

mamy trzy rodzaje arkuszy stylów:
- zewnętrzny - plik css
- wewnętrzny (<style>)
- lokalny - umieszczony wewnątrz znacznika

lokaly znacznik:

<selektor style="właściwość:wartość;właściwość2;wartość2;></selektor>

np.:

<p style="color:blue;">tekst</p>

im styl jest bliżej miejsca, które formatuje, tym jest ważniejszy w hierarchi formatowania (w przypadku konfliktów)

jest więcej właściwości css niż znaczników html


Hierarchia stylów (w przypadku zastosowania wielu różnych):
- Styl lokalny
- Rozciąganie style <span>
- Wydzielone blocki <div>
- Wewnętrzny arkusz stylów
- Zewnętrzny arkusz stylów
- Import arkusza stylów
- Domyślne ustawienie przeglądarki

adresowanie względne - adresowanie względem miejsca w którym jest plik (np ../katalog/podkatalog/index.html)
adresowanie bezwzględne - adresowanie niezależnie od miejsca umieszaczenie pliku (na Windowsie np. C:\Users\User\Dosktop\index.html, na linuxie np. /home/user/Desktop/index.html) NIE UŻYWAĆ

id:

nie zaczynamy od cyfry
jak najkrótsze
deklarujemy jako <znacznik id="nazwaid">
id może się odnosić wyłącznie do jednego elementu
rozróżnia małe i duże litery (najlepiej pisz małymi, jest łatwiej)
może się odnosić do innego pliku (<a href="innyplik.html#id>inny plik</a>")
nimi tworzymy kotwice
można go używać w css jako #id{}
id są ważniejsze w przypadku konfliktu stylów ze znacznikiem (waga 1000)

WAGI selektorów - im większa tym ważniejszy w przypadku konfilktu stylów
znacznik - waga 1
id - waga 1000
klasa - waga 100

favicon - ikonka obok nazwy strony

sementyczna struktura strony - używanie divów nazwanych wcześniej zamiast tworzenia dwóch milinów leggerów

pozycjonowanie kontekstowe dotyczy elementów zagnieżdżonych; dla ojca dajemy position: relative, dla bachora position: absolute i mamy

